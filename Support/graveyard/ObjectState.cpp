///////////////////////////////////////////////////////////////////////////////
//
//  ObjectState.cpp
//
//
///////////////////////////////////////////////////////////////////////////////
#include "ObjectState.hpp"




//=============================================================================
//
//		
//
//
//=============================================================================
object_state::object_state( void) 
{


}



//=============================================================================
//
//		
//
//
//=============================================================================
object_state::~object_state( )
{



}                


//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnInit(  void )        
{


}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnEnter( void )
{


}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnExit(  void )
{


}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnKill(  void )

{


}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnAdvanceLogic( f32 DeltaTime )        //  Only current state gets an OnAdvanceLogic call
{
    CONTEXT( "object_state::OnAdvanceLogic" );

    DeltaTime += 0.0f;

}



//=============================================================================
//
//		
//
//
//=============================================================================
xbool object_state::OnAssociateScript( lua_script* thisScript )
{
    if(0)
        thisScript->GetDataSize();
    return true;
}



//=============================================================================
//
//		
//
//
//=============================================================================
xbool object_state::RequestSpeedChange( state_speed newSpeed )
{
    if(0)
        newSpeed = object_state::STATE_SPEED_NONE;
    return true;
}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::SetSpeed(           state_speed newSpeed )
{
    if(0)
        newSpeed = object_state::STATE_SPEED_NONE;

}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnSpeedChange(      state_speed oldSpeed, state_speed newSpeed )
 
{
    if(0)
        oldSpeed = newSpeed;

}



//=============================================================================
//
//		
//
//
//=============================================================================
xbool object_state::RequestMoodChange(  state_mood  newMood )
{
    if(0)
        newMood = object_state::STATE_MOOD_CAUTIOUS;
    return true;
}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::SetMood(            state_mood  newMood )
{
    if(0)
        newMood = object_state::STATE_MOOD_CAUTIOUS;


}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnMoodChange(       state_mood  oldMood,  state_mood  newMood )
{
    if(0)
        oldMood = newMood;

}



//=============================================================================
//
//		
//
//
//=============================================================================
xbool object_state::RequestMove(        vector3&    target )
{
    if(0)
        target.X =0.0f;

    return true;
}



//=============================================================================
//
//		
//
//
//=============================================================================
void object_state::OnCollision(        object*     collisionObject)
{
    if(0)
        collisionObject = NULL;

}



//=============================================================================
//
//		
//
//
//=============================================================================
object_state::state_speed object_state::GetSpeedType( void )
{

    return object_state::STATE_SPEED_NONE;
}



//=============================================================================
//
//		
//
//
//=============================================================================
object_state::state_mood object_state::GetMood     ( void )   
{

    return object_state::STATE_MOOD_NORMAL;
}



//=============================================================================
//
//		
//
//
//=============================================================================
const char* object_state::MoodToString(   object_state::state_mood thisMood )
{
    if(0)
        thisMood = object_state::STATE_MOOD_NORMAL;

    return NULL;
}



//=============================================================================
//
//		
//
//
//=============================================================================
const char* object_state::SpeedToString(  object_state::state_speed thisSpeed)
{
    if(0)
        thisSpeed = object_state::STATE_SPEED_NONE;
    
    return NULL;
}



//=============================================================================
//
//		
//
//
//=============================================================================
object_state::state_mood object_state::StringToMood(  const char *thisMood )
{
    if(0)
        thisMood = NULL;

    return object_state::STATE_MOOD_NORMAL;
}



//=============================================================================
//
//		
//
//
//=============================================================================
object_state::state_speed object_state::StringToSpeed(  const char *thisSpeed )
{
    if(0)
        thisSpeed = NULL;

    return object_state::STATE_SPEED_NONE;
}